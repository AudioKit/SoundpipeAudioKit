// Copyright AudioKit. All Rights Reserved. Revision History at http://github.com/AudioKit/AudioKit/
// This file was auto-autogenerated by scripts and templates at http://github.com/AudioKit/AudioKitDevTools/

import AudioKit
import AudioKitEX
import AVFoundation
import CAudioKitEX

/// Ensemble effect with 9 independent pitch shifters
public class Ensemble: Node {
    let input: Node

    /// Connected nodes
    public var connections: [Node] { [input] }

    /// Underlying AVAudioNode
    public var avAudioNode = instantiate(effect: "ensm")

    // MARK: - Parameters

    /// Specification details for shift1
    public static let shift1Def = NodeParameterDef(
        identifier: "shift1",
        name: "Shift 1",
        address: akGetParameterAddress("EnsembleParameterShift1"),
        defaultValue: 0,
        range: -24.0 ... 24.0,
        unit: .relativeSemiTones
    )

    /// Pitch shift 1 (in semitones)
    @Parameter(shift1Def) public var shift1: AUValue

    /// Specification details for shift2
    public static let shift2Def = NodeParameterDef(
        identifier: "shift2",
        name: "Shift 2",
        address: akGetParameterAddress("EnsembleParameterShift2"),
        defaultValue: 0,
        range: -24.0 ... 24.0,
        unit: .relativeSemiTones
    )

    /// Pitch shift 2 (in semitones)
    @Parameter(shift2Def) public var shift2: AUValue

    /// Specification details for shift3
    public static let shift3Def = NodeParameterDef(
        identifier: "shift3",
        name: "Shift 3",
        address: akGetParameterAddress("EnsembleParameterShift3"),
        defaultValue: 0,
        range: -24.0 ... 24.0,
        unit: .relativeSemiTones
    )

    /// Pitch shift 3 (in semitones)
    @Parameter(shift3Def) public var shift3: AUValue

    /// Specification details for shift4
    public static let shift4Def = NodeParameterDef(
        identifier: "shift4",
        name: "Shift 4",
        address: akGetParameterAddress("EnsembleParameterShift4"),
        defaultValue: 0,
        range: -24.0 ... 24.0,
        unit: .relativeSemiTones
    )

    /// Pitch shift 4 (in semitones)
    @Parameter(shift4Def) public var shift4: AUValue

    /// Specification details for shift5
    public static let shift5Def = NodeParameterDef(
        identifier: "shift5",
        name: "Shift 5",
        address: akGetParameterAddress("EnsembleParameterShift5"),
        defaultValue: 0,
        range: -24.0 ... 24.0,
        unit: .relativeSemiTones
    )

    /// Pitch shift 5 (in semitones)
    @Parameter(shift5Def) public var shift5: AUValue

    /// Specification details for shift6
    public static let shift6Def = NodeParameterDef(
        identifier: "shift6",
        name: "Shift 6",
        address: akGetParameterAddress("EnsembleParameterShift6"),
        defaultValue: 0,
        range: -24.0 ... 24.0,
        unit: .relativeSemiTones
    )

    /// Pitch shift 6 (in semitones)
    @Parameter(shift6Def) public var shift6: AUValue

    /// Specification details for shift7
    public static let shift7Def = NodeParameterDef(
        identifier: "shift7",
        name: "Shift 7",
        address: akGetParameterAddress("EnsembleParameterShift7"),
        defaultValue: 0,
        range: -24.0 ... 24.0,
        unit: .relativeSemiTones
    )

    /// Pitch shift 7 (in semitones)
    @Parameter(shift7Def) public var shift7: AUValue

    /// Specification details for shift8
    public static let shift8Def = NodeParameterDef(
        identifier: "shift8",
        name: "Shift 8",
        address: akGetParameterAddress("EnsembleParameterShift8"),
        defaultValue: 0,
        range: -24.0 ... 24.0,
        unit: .relativeSemiTones
    )

    /// Pitch shift 8 (in semitones)
    @Parameter(shift8Def) public var shift8: AUValue

    /// Specification details for shift9
    public static let shift9Def = NodeParameterDef(
        identifier: "shift9",
        name: "Shift 9",
        address: akGetParameterAddress("EnsembleParameterShift9"),
        defaultValue: 0,
        range: -24.0 ... 24.0,
        unit: .relativeSemiTones
    )

    /// Pitch shift 9 (in semitones)
    @Parameter(shift9Def) public var shift9: AUValue

    /// Specification details for pan1
    public static let pan1Def = NodeParameterDef(
        identifier: "pan1",
        name: "Pan 1",
        address: akGetParameterAddress("EnsembleParameterPan1"),
        defaultValue: 0,
        range: -1.0 ... 1.0,
        unit: .pan
    )

    /// Pan position 1 (-1 = left, 0 = center, 1 = right)
    @Parameter(pan1Def) public var pan1: AUValue

    /// Specification details for pan2
    public static let pan2Def = NodeParameterDef(
        identifier: "pan2",
        name: "Pan 2",
        address: akGetParameterAddress("EnsembleParameterPan2"),
        defaultValue: 0,
        range: -1.0 ... 1.0,
        unit: .pan
    )

    /// Pan position 2 (-1 = left, 0 = center, 1 = right)
    @Parameter(pan2Def) public var pan2: AUValue

    /// Specification details for pan3
    public static let pan3Def = NodeParameterDef(
        identifier: "pan3",
        name: "Pan 3",
        address: akGetParameterAddress("EnsembleParameterPan3"),
        defaultValue: 0,
        range: -1.0 ... 1.0,
        unit: .pan
    )

    /// Pan position 3 (-1 = left, 0 = center, 1 = right)
    @Parameter(pan3Def) public var pan3: AUValue

    /// Specification details for pan4
    public static let pan4Def = NodeParameterDef(
        identifier: "pan4",
        name: "Pan 4",
        address: akGetParameterAddress("EnsembleParameterPan4"),
        defaultValue: 0,
        range: -1.0 ... 1.0,
        unit: .pan
    )

    /// Pan position 4 (-1 = left, 0 = center, 1 = right)
    @Parameter(pan4Def) public var pan4: AUValue

    /// Specification details for pan5
    public static let pan5Def = NodeParameterDef(
        identifier: "pan5",
        name: "Pan 5",
        address: akGetParameterAddress("EnsembleParameterPan5"),
        defaultValue: 0,
        range: -1.0 ... 1.0,
        unit: .pan
    )

    /// Pan position 5 (-1 = left, 0 = center, 1 = right)
    @Parameter(pan5Def) public var pan5: AUValue

    /// Specification details for pan6
    public static let pan6Def = NodeParameterDef(
        identifier: "pan6",
        name: "Pan 6",
        address: akGetParameterAddress("EnsembleParameterPan6"),
        defaultValue: 0,
        range: -1.0 ... 1.0,
        unit: .pan
    )

    /// Pan position 6 (-1 = left, 0 = center, 1 = right)
    @Parameter(pan6Def) public var pan6: AUValue

    /// Specification details for pan7
    public static let pan7Def = NodeParameterDef(
        identifier: "pan7",
        name: "Pan 7",
        address: akGetParameterAddress("EnsembleParameterPan7"),
        defaultValue: 0,
        range: -1.0 ... 1.0,
        unit: .pan
    )

    /// Pan position 7 (-1 = left, 0 = center, 1 = right)
    @Parameter(pan7Def) public var pan7: AUValue

    /// Specification details for pan8
    public static let pan8Def = NodeParameterDef(
        identifier: "pan8",
        name: "Pan 8",
        address: akGetParameterAddress("EnsembleParameterPan8"),
        defaultValue: 0,
        range: -1.0 ... 1.0,
        unit: .pan
    )

    /// Pan position 8 (-1 = left, 0 = center, 1 = right)
    @Parameter(pan8Def) public var pan8: AUValue

    /// Specification details for pan9
    public static let pan9Def = NodeParameterDef(
        identifier: "pan9",
        name: "Pan 9",
        address: akGetParameterAddress("EnsembleParameterPan9"),
        defaultValue: 0,
        range: -1.0 ... 1.0,
        unit: .pan
    )

    /// Pan position 9 (-1 = left, 0 = center, 1 = right)
    @Parameter(pan9Def) public var pan9: AUValue

    /// Specification details for dryWetMix
    public static let dryWetMixDef = NodeParameterDef(
        identifier: "dryWetMix",
        name: "Dry/Wet Mix",
        address: akGetParameterAddress("EnsembleParameterDryWetMix"),
        defaultValue: 1.0,
        range: 0.0 ... 1.0,
        unit: .percent
    )

    /// Dry/Wet Mix
    @Parameter(dryWetMixDef) public var dryWetMix: AUValue

    // MARK: - Initialization

    /// Initialize this ensemble node
    ///
    /// - Parameters:
    ///   - input: Input node to process
    ///   - shifts: Array of pitch shifts (in semitones) for each voice. Should contain up to 9 values.
    ///   - pans: Array of pan positions for each voice (-1 = left, 0 = center, 1 = right). Should contain up to 9 values.
    ///   - dryWetMix: Dry/Wet Mix
    ///
    public init(
        _ input: Node,
        shifts: [AUValue] = [0, 0, 0, 0, 0, 0, 0, 0, 0],
        pans: [AUValue] = [0, 0, 0, 0, 0, 0, 0, 0, 0],
        dryWetMix: AUValue = dryWetMixDef.defaultValue
    ) {
        self.input = input

        setupParameters()

        // Set shift parameters from array, filling missing values with defaults
        self.shift1 = shifts.count > 0 ? shifts[0] : Self.shift1Def.defaultValue
        self.shift2 = shifts.count > 1 ? shifts[1] : Self.shift2Def.defaultValue
        self.shift3 = shifts.count > 2 ? shifts[2] : Self.shift3Def.defaultValue
        self.shift4 = shifts.count > 3 ? shifts[3] : Self.shift4Def.defaultValue
        self.shift5 = shifts.count > 4 ? shifts[4] : Self.shift5Def.defaultValue
        self.shift6 = shifts.count > 5 ? shifts[5] : Self.shift6Def.defaultValue
        self.shift7 = shifts.count > 6 ? shifts[6] : Self.shift7Def.defaultValue
        self.shift8 = shifts.count > 7 ? shifts[7] : Self.shift8Def.defaultValue
        self.shift9 = shifts.count > 8 ? shifts[8] : Self.shift9Def.defaultValue
        
        // Set pan parameters from array, filling missing values with defaults
        self.pan1 = pans.count > 0 ? pans[0] : Self.pan1Def.defaultValue
        self.pan2 = pans.count > 1 ? pans[1] : Self.pan2Def.defaultValue
        self.pan3 = pans.count > 2 ? pans[2] : Self.pan3Def.defaultValue
        self.pan4 = pans.count > 3 ? pans[3] : Self.pan4Def.defaultValue
        self.pan5 = pans.count > 4 ? pans[4] : Self.pan5Def.defaultValue
        self.pan6 = pans.count > 5 ? pans[5] : Self.pan6Def.defaultValue
        self.pan7 = pans.count > 6 ? pans[6] : Self.pan7Def.defaultValue
        self.pan8 = pans.count > 7 ? pans[7] : Self.pan8Def.defaultValue
        self.pan9 = pans.count > 8 ? pans[8] : Self.pan9Def.defaultValue
        
        self.dryWetMix = dryWetMix
    }
}
