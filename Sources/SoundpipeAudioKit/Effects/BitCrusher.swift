// Copyright AudioKit. All Rights Reserved. Revision History at http://github.com/AudioKit/AudioKit/
// This file was auto-autogenerated by scripts and templates at http://github.com/AudioKit/AudioKitDevTools/

import AudioKit
import AudioKitEX
import AVFoundation
import CAudioKitEX

/// This will digitally degrade a signal.
public class BitCrusher: Node {
    let input: Node

    /// Connected nodes
    public var connections: [Node] { [input] }

    /// Underlying AVAudioNode
    public var avAudioNode = instantiate(effect: "btcr")

    // MARK: - Parameters

    /// Specification details for bitDepth
    public static let bitDepthDef = NodeParameterDef(
        identifier: "bitDepth",
        name: "Bit Depth",
        address: akGetParameterAddress("BitCrusherParameterBitDepth"),
        defaultValue: 8,
        range: 1 ... 24,
        unit: .generic
    )

    /// The bit depth of signal output. Typically in range (1-24). Non-integer values are OK.
    @Parameter(bitDepthDef) public var bitDepth: AUValue

    /// Specification details for sampleRate
    public static let sampleRateDef = NodeParameterDef(
        identifier: "sampleRate",
        name: "Sample Rate",
        address: akGetParameterAddress("BitCrusherParameterSampleRate"),
        defaultValue: 10000,
        range: 0.0 ... 20000.0,
        unit: .hertz
    )

    /// The sample rate of signal output.
    @Parameter(sampleRateDef) public var sampleRate: AUValue

    /// Specification details for dryWetMix
    public static let dryWetMixDef = NodeParameterDef(
        identifier: "dryWetMix",
        name: "Dry/Wet Mix",
        address: akGetParameterAddress("BitCrusherParameterDryWetMix"),
        defaultValue: 1.0,
        range: 0.0 ... 1.0,
        unit: .percent
    )

    /// Dry/Wet Mix
    @Parameter(dryWetMixDef) public var dryWetMix: AUValue

    // MARK: - Initialization

    /// Initialize this bitcrusher node
    ///
    /// - Parameters:
    ///   - input: Input node to process
    ///   - bitDepth: The bit depth of signal output. Typically in range (1-24). Non-integer values are OK.
    ///   - sampleRate: The sample rate of signal output.
    ///   - dryWetMix: Dry/Wet Mix
    ///
    public init(
        _ input: Node,
        bitDepth: AUValue = bitDepthDef.defaultValue,
        sampleRate: AUValue = sampleRateDef.defaultValue,
        dryWetMix: AUValue = dryWetMixDef.defaultValue
    ) {
        self.input = input

        setupParameters()

        self.bitDepth = bitDepth
        self.sampleRate = sampleRate
        self.dryWetMix = dryWetMix
    }
}
