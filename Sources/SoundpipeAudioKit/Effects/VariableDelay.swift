// Copyright AudioKit. All Rights Reserved. Revision History at http://github.com/AudioKit/AudioKit/
// This file was auto-autogenerated by scripts and templates at http://github.com/AudioKit/AudioKitDevTools/

import AudioKit
import AudioKitEX
import AVFoundation
import CSoundpipeAudioKit

/// A delay line with cubic interpolation.
public class VariableDelay: Node {
    let input: Node

    /// Connected nodes
    public var connections: [Node] { [input] }

    /// Underlying AVAudioNode
    public var avAudioNode = instantiate(effect: "vdla")

    // MARK: - Parameters

    /// Specification details for time
    public static let timeDef = NodeParameterDef(
        identifier: "time",
        name: "Delay time",
        address: akGetParameterAddress("VariableDelayParameterTime"),
        defaultValue: 0,
        range: 0 ... 10,
        unit: .seconds
    )

    /// Delay time (in seconds) This value must not exceed the maximum delay time.
    @Parameter(timeDef) public var time: AUValue

    /// Specification details for feedback
    public static let feedbackDef = NodeParameterDef(
        identifier: "feedback",
        name: "Feedback",
        address: akGetParameterAddress("VariableDelayParameterFeedback"),
        defaultValue: 0,
        range: 0 ... 1,
        unit: .generic
    )

    /// Feedback amount. Should be a value between 0-1.
    @Parameter(feedbackDef) public var feedback: AUValue

    /// Specification details for dryWetMix
    public static let dryWetMixDef = NodeParameterDef(
        identifier: "dryWetMix",
        name: "Dry/Wet Mix",
        address: akGetParameterAddress("VariableDelayParameterDryWetMix"),
        defaultValue: 1.0,
        range: 0.0 ... 1.0,
        unit: .percent
    )

    /// Dry/Wet Mix
    @Parameter(dryWetMixDef) public var dryWetMix: AUValue

    // MARK: - Initialization

    /// Initialize this delay node
    ///
    /// - Parameters:
    ///   - input: Input node to process
    ///   - time: Delay time (in seconds) This value must not exceed the maximum delay time.
    ///   - feedback: Feedback amount. Should be a value between 0-1.
    ///   - maximumTime: The maximum delay time, in seconds.
    ///   - dryWetMix: Dry/Wet Mix
    ///
    public init(
        _ input: Node,
        time: AUValue = timeDef.defaultValue,
        feedback: AUValue = feedbackDef.defaultValue,
        maximumTime: AUValue = 5,
        dryWetMix: AUValue = dryWetMixDef.defaultValue
    ) {
        self.input = input

        setupParameters()

        akVariableDelaySetMaximumTime(au.dsp, maximumTime)

        self.time = time
        self.feedback = feedback
        self.dryWetMix = dryWetMix
    }
}
